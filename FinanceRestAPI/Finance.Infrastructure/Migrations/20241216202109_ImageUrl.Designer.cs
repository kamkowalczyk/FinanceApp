// <auto-generated />
using System;
using Finance.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finance.Infrastructure.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20241216202109_ImageUrl")]
    partial class ImageUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finance.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MarketCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentPrice = 150.00m,
                            LastUpdated = new DateTime(2024, 4, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            MarketCap = 2500000000m,
                            Name = "Apple",
                            Symbol = "AAPL"
                        },
                        new
                        {
                            Id = 2,
                            CurrentPrice = 280.00m,
                            LastUpdated = new DateTime(2024, 4, 25, 10, 5, 0, 0, DateTimeKind.Unspecified),
                            MarketCap = 2100000000m,
                            Name = "Microsoft",
                            Symbol = "MSFT"
                        });
                });

            modelBuilder.Entity("Finance.Domain.Entities.CryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MarketCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalVolume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentPrice = 30000.00m,
                            LastUpdated = new DateTime(2024, 4, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            MarketCap = 600000000000m,
                            Name = "Bitcoin",
                            Symbol = "BTC",
                            TotalVolume = 25000000m
                        },
                        new
                        {
                            Id = 2,
                            CurrentPrice = 2000.00m,
                            LastUpdated = new DateTime(2024, 4, 25, 11, 5, 0, 0, DateTimeKind.Unspecified),
                            MarketCap = 250000000000m,
                            Name = "Ethereum",
                            Symbol = "ETH",
                            TotalVolume = 15000000m
                        });
                });

            modelBuilder.Entity("Finance.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "USD",
                            Name = "US Dollar"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EUR",
                            Name = "Euro"
                        },
                        new
                        {
                            Id = 3,
                            Code = "GBP",
                            Name = "British Pound"
                        });
                });

            modelBuilder.Entity("Finance.Domain.Entities.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ExchangeRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyId = 1,
                            Date = new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 1.00m
                        },
                        new
                        {
                            Id = 2,
                            CurrencyId = 2,
                            Date = new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 1.10m
                        },
                        new
                        {
                            Id = 3,
                            CurrencyId = 3,
                            Date = new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 1.30m
                        });
                });

            modelBuilder.Entity("Finance.Domain.Entities.ExchangeRate", b =>
                {
                    b.HasOne("Finance.Domain.Entities.Currency", "Currency")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Finance.Domain.Entities.Currency", b =>
                {
                    b.Navigation("ExchangeRates");
                });
#pragma warning restore 612, 618
        }
    }
}
